{"version":3,"sources":["../src/index.js"],"names":["Scope","get","name","hasOwnProperty","e","console","log","message","set","value","exports","use","obj","Object","keys","forEach","key","wait","_this","Promise","resolve","reject","pInterval","setInterval","every","clearInterval","$","plugins","pluginsPath","pluginsPathResolve","path","join","process","cwd","then","paths","pluginPath","env","DEBUG","pluginRequest","require","default","controllers","controllersPath","controllersPathResolve","controllerPath","controllerRequest"],"mappings":";;;;;;;8QAAA;;AAEA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAIA,QAAQ,EAAZ;;AAEAA,MAAMC,GAAN,GAAY,UAASC,IAAT,EAAe;AACvB,QAAG;AACC,YAAG,KAAKC,cAAL,CAAoBD,IAApB,CAAH,EACI,OAAO,KAAKA,IAAL,CAAP,CADJ,KAGI,MAASA,IAAT;AACP,KALD,CAMA,OAAME,CAAN,EAAQ;AACJC,gBAAQC,GAAR,CAAYF,EAAEG,OAAd;AACA,eAAO,KAAP;AACH;AACJ,CAXD;;AAaAP,MAAMQ,GAAN,GAAY,UAASN,IAAT,EAAeO,KAAf,EAAsB;AAC9B,QAAG;AACC,YAAG,KAAKN,cAAL,CAAoBD,IAApB,CAAH,EACIG,QAAQC,GAAR,CAAeJ,IAAf,mCAAiDO,KAAjD;AACP,KAHD,CAGE,OAAML,CAAN,EAAS,CAAG;;AAEd,QAAGF,SAAS,KAAT,IAAkBA,SAAS,KAA3B,IAAoCA,SAAS,KAAhD,EAAsD;AAClD,aAAKA,IAAL,IAAaO,KAAb;AACAC,gBAAQR,IAAR,IAAgBO,KAAhB;AACH,KAHD,MAII;AACAJ,gBAAQC,GAAR;AACH;AACJ,CAbD;;AAeAN,MAAMW,GAAN,GAAY,UAASC,GAAT,EAAc;AAAA;;AACtB,QAAG,QAAOA,GAAP,yCAAOA,GAAP,MAAc,QAAjB,EAA0B;AACtBC,eAAOC,IAAP,CAAYF,GAAZ,EAAiBG,OAAjB,CAAyB,UAACC,GAAD,EAAS;AAC9B,mBAAKA,GAAL,IAAYJ,IAAII,GAAJ,CAAZ;AACH,SAFD;AAGH;AACJ,CAND;;AAQAhB,MAAMiB,IAAN,GAAa,UAASL,GAAT,EAAc;AAAA;;AACvB,QAAIM,QAAQ,IAAZ;;AAEA,WAAO,IAAIC,OAAJ;AAAA,2EAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACf,gCAAG;AACC,oCAAG,QAAOT,GAAP,yCAAOA,GAAP,MAAc,QAAjB,EAA0B;AAClBU,6CADkB,GACNC,YAAY,YAAM;AAC9B,4CAAGX,IAAIY,KAAJ,CAAU,UAACR,GAAD,EAAS;AAAE,mDAAOE,MAAMf,cAAN,CAAqBa,GAArB,CAAP;AAAmC,yCAAxD,CAAH,EAA6D;AACzDS,0DAAcH,SAAd;AACAF;AACH;AACJ,qCALe,EAKb,GALa,CADM;AAOzB,iCAPD,MAQK,IAAG,OAAOR,GAAP,IAAc,QAAjB,EAA0B;AACvBU,6CADuB,GACXC,YAAY,YAAM;AAC9B,4CAAGL,MAAMf,cAAN,CAAqBS,GAArB,CAAH,EAA6B;AACzBa,0DAAcH,SAAd;AACAF;AACH;AACJ,qCALe,EAKb,GALa,CADW;AAO9B;AACJ,6BAjBD,CAiBE,OAAMhB,CAAN,EAAQ;AACNiB,uCAAOjB,EAAEG,OAAT;AACH;;AApBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,QAAP;AAsBH,CAzBD;;AA2BO,IAAImB,gBAAI1B,KAAR;kBACQA,K;;AAEf;;AACO,IAAI2B;AAAA,wEAAU,kBAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEPC,0CAFO,GAEcC,eAAKC,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyBL,WAAzB,CAFd;AAAA;AAAA,+BAIP,sBAAO,CAAIC,kBAAJ,sBAA4CA,kBAA5C,uBAAP,EAA2FK,IAA3F;AAAA,gGAAgG,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAC5FA,MAAMpB,OAAN;AAAA,wHAAc,kBAAOqB,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB,4EAAGJ,QAAQK,GAAR,CAAYC,KAAZ,IAAqB,MAAxB,EACIjC,QAAQC,GAAR,yBAAkC8B,UAAlC;;AAEAG,qFAJY,GAIIC,QAAQV,eAAKV,OAAL,CAAagB,UAAb,CAAR,CAJJ;;AAAA,8EAMb,OAAOG,aAAP,IAAwB,UANX;AAAA;AAAA;AAAA;;AAAA;AAAA,+EAONA,eAPM;;AAAA;AAAA;AAAA;;AAAA;AAAA,8EAQR,OAAOA,cAAcE,OAArB,IAAgC,UARxB;AAAA;AAAA;AAAA;;AAAA;AAAA,+EASNF,cAAcE,OAAd,EATM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAd;;AAAA;AAAA;AAAA;AAAA,oDAD4F;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAhG;;AAAA;AAAA;AAAA;AAAA,4BAJO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAkBbpC,gCAAQC,GAAR,oBAA6B,aAAEC,OAA/B;;AAlBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA,GAAJ;;AAsBP;AACO,IAAImC;AAAA,wEAAc,kBAAOC,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXC,8CAFW,GAEcd,eAAKC,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyBU,eAAzB,CAFd;AAAA;AAAA,+BAIX,sBAAO,CAAIC,sBAAJ,YAAsCA,sBAAtC,cAAP,EAAgFV,IAAhF;AAAA,gGAAqF,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AACvFA,sDAAMpB,OAAN;AAAA,wHAAc,kBAAO8B,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACV,4EAAGb,QAAQK,GAAR,CAAYC,KAAZ,IAAqB,MAAxB,EACIjC,QAAQC,GAAR,6BAAsCuC,cAAtC;;AAEAC,yFAJM,GAIcN,QAAQV,eAAKV,OAAL,CAAayB,cAAb,CAAR,CAJd;;AAAA,8EAMP,OAAOC,iBAAP,IAA4B,UANrB;AAAA;AAAA;AAAA;;AAAA;AAAA,+EAOAA,mBAPA;;AAAA;AAAA;AAAA;;AAAA;AAAA,8EAQF,OAAOA,kBAAkBL,OAAzB,IAAoC,UARlC;AAAA;AAAA;AAAA;;AAAA;AAAA,+EASAK,kBAAkBL,OAAlB,EATA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAd;;AAAA;AAAA;AAAA;AAAA;;AADuF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAArF;;AAAA;AAAA;AAAA;AAAA,4BAJW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAmBjBpC,gCAAQC,GAAR,wBAAiC,aAAEC,OAAnC;;AAnBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAd;;AAAA;AAAA;AAAA;AAAA,GAAJ","file":"index.js","sourcesContent":["//Global scope driver\n\nimport path from \"path\";\nimport globby from \"globby\";\nimport _ from \"lodash\";\n\nvar Scope = {};\n\nScope.get = function(name) {\n    try{\n        if(this.hasOwnProperty(name))\n            return this[name]\n        else\n            throw `${name} does not exist in scope`;\n    }\n    catch(e){\n        console.log(e.message);\n        return false;\n    }\n};\n\nScope.set = function(name, value) {\n    try{\n        if(this.hasOwnProperty(name))\n            console.log(`${name} was replaced by the value ${value}`);\n    } catch(e) { }\n\n    if(name !== \"get\" && name !== \"set\" && name !== \"use\"){\n        this[name] = value;\n        exports[name] = value;\n    }\n    else{\n        console.log(`Do not use the names \"get\", \"set\" or \"use\"`);\n    }\n};\n\nScope.use = function(obj) {\n    if(typeof obj == \"object\"){\n        Object.keys(obj).forEach((key) => {\n            this[key] = obj[key];\n        });\n    }\n};\n\nScope.wait = function(obj) {\n    var _this = this;\n\n    return new Promise(async (resolve, reject) => {\n        try{\n            if(typeof obj == \"object\"){\n                var pInterval = setInterval(() => {\n                    if(obj.every((key) => { return _this.hasOwnProperty(key); })){\n                        clearInterval(pInterval);\n                        resolve();\n                    }\n                }, 100);\n            }\n            else if(typeof obj == \"string\"){\n                var pInterval = setInterval(() => {\n                    if(_this.hasOwnProperty(obj)){\n                        clearInterval(pInterval);\n                        resolve();\n                    }\n                }, 100);\n            }\n        } catch(e){\n            reject(e.message);\n        }\n    });\n};\n\nexport let $ = Scope;\nexport default Scope;\n\n//Plugins\nexport let plugins = async (pluginsPath) => {\n    try{\n        const pluginsPathResolve = path.join(process.cwd(), pluginsPath);\n\n        await globby([`${pluginsPathResolve}/build/index.js`, `${pluginsPathResolve}/*/build/index.js`]).then(async (paths) => {\n            await paths.forEach(async (pluginPath) => {\n                if(process.env.DEBUG == 'true')\n                    console.log(`[ Plugins ] - Load ${pluginPath}`);\n\n                var pluginRequest = require(path.resolve(pluginPath));\n\n                if(typeof pluginRequest == \"function\")\n                    await pluginRequest();\n                else if(typeof pluginRequest.default == \"function\")\n                    await pluginRequest.default();\n            });\n        });\n    } catch(e){\n        console.log(`[ Plugins ] - ${e.message}`);\n    }\n};\n\n//Controllers\nexport let controllers = async (controllersPath) => {\n    try{\n        const controllersPathResolve = path.join(process.cwd(), controllersPath);\n\n        await globby([`${controllersPathResolve}/*.js`, `${controllersPathResolve}/**/*.js`]).then(async (paths) => {\n            paths.forEach(async (controllerPath) => {\n                if(process.env.DEBUG == 'true')\n                    console.log(`[ Controllers ] - Load ${controllerPath}`);\n\n                var controllerRequest = require(path.resolve(controllerPath));\n\n                if(typeof controllerRequest == \"function\")\n                    await controllerRequest();\n                else if(typeof controllerRequest.default == \"function\")\n                    await controllerRequest.default();\n            });\n        });\n    }\n    catch(e){\n        console.log(`[ Controllers ] - ${e.message}`);\n    }\n}\n"]}